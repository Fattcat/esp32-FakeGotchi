// here will be code for that ...
// and I will add some IMGs for show status about which stage esp32 doing and what it doing or with custom icons to indicate.

#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <WiFi.h>

#define SCREEN_WIDTH 128  // Šírka displeja OLED
#define SCREEN_HEIGHT 64  // Výška displeja OLED
#define OLED_RESET    -1  // Reset pin pre OLED displej
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

const unsigned char KittyMainIMG[] PROGMEM = {
	0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 
	0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 
	0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xfe, 0x60, 0x00, 
	0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xfe, 0xff, 0xff, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xfa, 0xff, 0xff, 0x80, 0x00, 
	0x00, 0x00, 0x00, 0x7f, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf5, 0xf2, 0x3f, 0xff, 0xc0, 0x00, 
	0x00, 0x00, 0x00, 0x7f, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe4, 0xf0, 0x1f, 0xff, 0xc0, 0x00, 
	0x00, 0x00, 0x00, 0xf0, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xee, 0xf0, 0x17, 0xff, 0xc0, 0x00, 
	0x00, 0x00, 0x01, 0xc2, 0x3a, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xde, 0xf8, 0x0f, 0xff, 0xe0, 0x00, 
	0x00, 0x00, 0x00, 0x80, 0x3d, 0x9f, 0xff, 0xff, 0xff, 0xff, 0x9e, 0xe8, 0x07, 0xff, 0xe0, 0x00, 
	0x00, 0x00, 0x00, 0x60, 0x0c, 0xe7, 0xff, 0xff, 0xff, 0xff, 0x3e, 0xe8, 0x07, 0xff, 0xc0, 0x00, 
	0x00, 0x00, 0x00, 0x40, 0x06, 0xf8, 0x7f, 0xff, 0xff, 0xfe, 0x7e, 0xe0, 0x03, 0xff, 0x90, 0x88, 
	0x00, 0x00, 0x01, 0xe0, 0x06, 0xdf, 0x04, 0x00, 0x7f, 0xfd, 0xee, 0xf0, 0x00, 0x7f, 0xe1, 0x08, 
	0x00, 0x00, 0x81, 0x00, 0x1e, 0x47, 0xf0, 0x00, 0x0f, 0xf3, 0xcc, 0xf8, 0x01, 0xff, 0xfe, 0x38, 
	0x00, 0x01, 0xe0, 0xc0, 0x3f, 0x60, 0xc0, 0x00, 0x00, 0x0f, 0x8d, 0xf8, 0x00, 0x1f, 0xff, 0xff, 
	0x00, 0x02, 0x7e, 0x78, 0x1f, 0x60, 0x07, 0xf8, 0x00, 0x7f, 0x0d, 0xfb, 0xfc, 0x0f, 0xff, 0xff, 
	0xe0, 0x06, 0x7f, 0xff, 0x87, 0xb0, 0x0f, 0xff, 0xf0, 0x0c, 0x1d, 0xf3, 0xfc, 0x0f, 0xff, 0xff, 
	0xf0, 0x04, 0xff, 0xff, 0xff, 0xb0, 0x3f, 0xff, 0xff, 0x00, 0x1b, 0xe7, 0xfc, 0x3f, 0xff, 0xff, 
	0xe8, 0x09, 0xff, 0xff, 0xff, 0x9c, 0x7f, 0xff, 0xff, 0xc0, 0x1b, 0xf3, 0xfc, 0x7f, 0xf7, 0xff, 
	0xc8, 0x13, 0xff, 0xf9, 0xff, 0xd8, 0xff, 0xff, 0xff, 0xf0, 0x33, 0xf3, 0xfc, 0x7f, 0x8f, 0xff, 
	0xe0, 0x27, 0xfc, 0x07, 0xff, 0xd8, 0xff, 0xff, 0xff, 0xf8, 0x17, 0xe3, 0xff, 0x0e, 0x35, 0xff, 
	0xc0, 0x07, 0xd0, 0x00, 0x7f, 0xc1, 0xf8, 0xff, 0xff, 0xfe, 0x07, 0xdb, 0xfc, 0x7c, 0x02, 0xff, 
	0xc0, 0x0f, 0xc0, 0x00, 0x3f, 0xe3, 0xf1, 0x7f, 0xf1, 0xff, 0x07, 0xf3, 0xff, 0xff, 0x00, 0xff, 
	0x80, 0x0f, 0x00, 0x00, 0x3f, 0xe7, 0xe1, 0xbf, 0xee, 0xff, 0x07, 0xff, 0x3f, 0xfe, 0x01, 0xff, 
	0xc0, 0x2f, 0x00, 0x00, 0xff, 0xcf, 0xe3, 0xbf, 0xdf, 0x7f, 0xc3, 0xff, 0xff, 0xff, 0x07, 0xff, 
	0x80, 0x16, 0x00, 0x00, 0xff, 0xcf, 0xef, 0xbf, 0xdc, 0x7f, 0xe1, 0xff, 0xff, 0xfc, 0x87, 0xff, 
	0x20, 0x06, 0x00, 0x00, 0x7f, 0x8f, 0xf7, 0x7b, 0xd8, 0x7f, 0xf0, 0xff, 0xff, 0xfe, 0x0c, 0xff, 
	0x80, 0x0f, 0x00, 0x00, 0x3f, 0x1f, 0xf8, 0xf1, 0xe8, 0x7f, 0xf8, 0xff, 0xff, 0xff, 0xe1, 0xff, 
	0x00, 0x0f, 0x01, 0x00, 0x7f, 0x13, 0xff, 0xe0, 0xf0, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 
	0x00, 0x10, 0x04, 0x00, 0xff, 0x38, 0x3f, 0xf1, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 
	0xf8, 0x40, 0x0f, 0xff, 0xff, 0x3e, 0x43, 0xfb, 0xff, 0xff, 0xfe, 0x3f, 0xbf, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x9c, 0x3f, 0xff, 0xff, 0xff, 0x1e, 0xff, 0xc3, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xe7, 0x87, 0xff, 0xff, 0xfe, 0x05, 0x80, 0x2b, 0xfc, 0x7f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xf9, 0xf1, 0xff, 0xff, 0x3e, 0x00, 0x17, 0xe3, 0xff, 0x9f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xfe, 0x3e, 0x3f, 0xfe, 0x3e, 0x06, 0x07, 0xc3, 0xff, 0xe3, 
	0xff, 0xc1, 0x1e, 0x60, 0xbb, 0xe7, 0xff, 0xcf, 0x87, 0xf1, 0xbc, 0x2d, 0x1f, 0xd3, 0xff, 0xf9, 
	0xff, 0xdd, 0x4c, 0x3c, 0xbb, 0xf3, 0xff, 0xf1, 0xf0, 0x0f, 0xb8, 0x38, 0xbf, 0xe3, 0xfc, 0x00, 
	0xff, 0xdf, 0x6d, 0xb9, 0x93, 0xf1, 0xff, 0xfe, 0x1f, 0xff, 0xb0, 0x30, 0x3f, 0xe3, 0xfc, 0x00, 
	0xff, 0xdf, 0x1c, 0x33, 0x83, 0xf0, 0xff, 0xff, 0xe3, 0xff, 0x20, 0x08, 0xe6, 0x83, 0xfc, 0x00, 
	0xff, 0xdd, 0x4d, 0xa7, 0xef, 0xf8, 0x7f, 0xff, 0xfc, 0x3f, 0x40, 0x05, 0xf6, 0xa0, 0xfb, 0xfc, 
	0xff, 0xc1, 0x6d, 0xa0, 0xef, 0xfc, 0x3f, 0xff, 0xff, 0xc7, 0x00, 0x01, 0xf6, 0xe2, 0x1b, 0xfc, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x1f, 0x2d, 0xfe, 0x73, 0xfc, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 0xf8, 0x00, 0x1f, 0xed, 0xff, 0xe3, 0xfc, 
	0xff, 0x0e, 0x60, 0xe1, 0x86, 0x0f, 0x80, 0xff, 0xff, 0xf0, 0x00, 0x1f, 0xc9, 0xff, 0xf3, 0xfc, 
	0xff, 0x6d, 0xae, 0xed, 0xb7, 0xbf, 0xe0, 0x1f, 0xff, 0xc0, 0x00, 0x07, 0xdb, 0xfb, 0xc3, 0xfc, 
	0xff, 0x0d, 0xa0, 0xef, 0x87, 0xbf, 0xfc, 0x01, 0xc0, 0x00, 0x00, 0x37, 0xff, 0xf7, 0x83, 0xfc, 
	0xff, 0x7d, 0xaf, 0xef, 0xb7, 0xbf, 0xff, 0x80, 0x00, 0x00, 0xc0, 0x19, 0xff, 0xcf, 0x03, 0xfc, 
	0xff, 0x7d, 0xaf, 0xed, 0xb7, 0xbf, 0xff, 0xe0, 0x00, 0x03, 0xc0, 0x1e, 0xff, 0xbb, 0xfc, 0x00, 
	0xff, 0x7e, 0x6f, 0xe1, 0xb7, 0xbf, 0xff, 0xf0, 0x3c, 0x01, 0x90, 0x3f, 0x7f, 0x73, 0xfc, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x18, 0x00, 0x80, 0x3f, 0x9c, 0xa3, 0xfc, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x0e, 0x00, 0x00, 0x03, 0xe9, 0x03, 0xfc, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8c, 0x00, 0x00, 0x0f, 0x84, 0x23, 0xfc, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x84, 0x00, 0x00, 0x00, 0x28, 0x03, 0xfc, 0x00, 
	0x40, 0x01, 0x79, 0x5f, 0xff, 0xff, 0xff, 0xff, 0x81, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfc, 0x00, 
	0x00, 0x00, 0x7a, 0x0f, 0x13, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfc, 0x00, 
	0x00, 0x00, 0xfc, 0x0c, 0x00, 0x00, 0x3f, 0xff, 0xe7, 0x80, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 
	0x80, 0x02, 0x9c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xf1, 0xd0, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 
	0x00, 0x02, 0x60, 0x3e, 0x00, 0x00, 0x0f, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xce, 0x70, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 
	0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x3f, 0x14, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 
	0x06, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x7f, 0xc0, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 
	0x10, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x7f, 0x90, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 
	0xf3, 0xf9, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x7f, 0x3c, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 
	0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
}

const unsigned char bitmap_display [] PROGMEM = {
  // Vložiť bitmapu 02 pre zobrazovanie výsledkov
  0x00, 0x00, 0x3C, 0x42, /* ... pokračovanie ... */
};

unsigned long previousMillis = 0;  // Pre sledovanie času
const long interval = 10000;       // 10 sekúnd

void setup() {
  Serial.begin(115200);
  WiFi.mode(WIFI_STA);
  WiFi.disconnect();

  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { 
    Serial.println(F("OLED inicializácia zlyhala"));
    for(;;);
  }
  
  display.clearDisplay();
}

void loop() {
  unsigned long currentMillis = millis();

  // Skontrolujte, či uplynulo 10 sekúnd
  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;

    // Zobrazenie bitmapy pre skenovanie (Bitmap01)
    display.clearDisplay();
    display.drawBitmap(0, 0, KittyMainIMG, 128, 64, SSD1306_WHITE);
    display.display();

    // Skenovanie WiFi sietí
    int n = WiFi.scanNetworks();
    if (n == 0) {
      Serial.println("Žiadne WiFi siete nenájdené");
    } else {
      int strongestSignal = -100;  // Štandardná hodnota pre veľmi slabý signál
      String strongestSSID = "";

      // Nájdeme najsilnejšiu sieť
      for (int i = 0; i < n; ++i) {
        int signalStrength = WiFi.RSSI(i);
        String ssid = WiFi.SSID(i);
        if (signalStrength > strongestSignal) {
          strongestSignal = signalStrength;
          strongestSSID = ssid;
        }
      }

      // Zobrazenie bitmapy pre výsledok (Bitmap02)
      display.clearDisplay();
      display.drawBitmap(0, 0, bitmap_display, 128, 64, SSD1306_WHITE);
      display.display();

      // Vypíše najsilnejšiu WiFi sieť do Serial Monitora
      Serial.print("Najsilejšia sieť: ");
      Serial.print(strongestSSID);
      Serial.print(" s RSSI: ");
      Serial.println(strongestSignal);
    }

    // Odstránenie výsledkov skenovania pre ďalšie použitie
    WiFi.scanDelete();
  }
}
